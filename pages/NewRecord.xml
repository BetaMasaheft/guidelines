<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://raw.githubusercontent.com/BetaMasaheft/guidelines/master/schema/out/tei-betamesaheftGL.rng"
schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="https://raw.githubusercontent.com/BetaMasaheft/guidelines/master/schema/out/tei-betamesaheftGL.rng"
type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Create New Entry</title>
                <author>Pietro Liuzzo</author>
            </titleStmt>
            <publicationStmt>
                <p/>
            </publicationStmt>
            <sourceDesc>
                <p>Produced by pandoc. Conversion from GIT flavoured markdown to TEI simple.</p>
                <p>transformed to TEI documentation with XSLT by Pietro Liuzzo</p>
            </sourceDesc>
        </fileDesc>       <revisionDesc>       <change who="PL" when="2018-04-30">first version of guidelines from Wiki</change>     </revisionDesc>
    </teiHeader>
    <text>
        <body xml:id="newEntry">
            <div type="level1">
                <head>Create a new record</head>
                <p>You shall now find a new "create new entity" function in the navigation bar of
                    the app. You only need to enter the name of the file, for manuscripts this is
                    the full filename, for the other entities just the last part of the ID (see
                        <gi>TEI</gi> schema specification). For LIT1234iliad, you would enter only
                    "iliad". For a manuscript, simply enter the full name, the small print will
                    indicate you what is needed. As you start typing the button will become active
                    and you can create the file. This is stored in the app, not in Github! As the
                    confirmation page will tell you blinking, you need to
                    <list rendition="ordered">
                        <item>download the file</item>
                        <item>save it in a folder called "new" into the proper folder</item>
                        <item>commit and sync to git</item>
                    </list>
                    Once you have done this GIT and our server will be again in sync, which
                    means you can now move your file if you need to (especially for manuscripts) and
                    then <hi rendition="simple:bold">commit and sync this change again.</hi></p>
                <p> If you omit the first step, we will have two identical files in two locations
                    and thus the id lookup of the app will fail not showing you your file. On
                    leaving the page you will get a warning every time, intended to make you stop
                    before you carry on without syncing. The generated file will have a consistent
                    new id and will insert it in the appropriate place in the file. This should
                    avoid the really frequent problem of ids not being updated after copy-pasting a
                    master file. It remains entirely possible to create your files in oXygen as
                    previously, but the application interface is recommended as it makes sure your id is unique.
                    The file will also have the correct type and a <gi>change</gi> element with your initials
                    and current date.</p>
                <p>Check the principles for creating a <ref target="works">WORK entity</ref> and the page about how to <ref target="placeOrInstitution">decide between a place and an institution</ref> record. </p>
                <p>To decide whether to create a new place record or not if in
                doubt, try the following.
<list>
<item>check if there is a record already in
our list</item>
<item>if yes, then
<list>
<item>check if there is also a wikidata item
(you can simply google what you are looking for, open the correct
wikipedia page you find and hit the wikidata item link on the left).</item>
  <item><list><item>if yes add a @sameAs attribute with the Q id in the url or at the
  top of the item.</item></list></item>
  <item>check if there is also a record in geonames.org</item>
  <item><list><item>if yes add a @sameAs attribute to place linking to such geonames
  id.</item>
<item>if not leave the record</item></list></item>
</list></item>
<item>add a ref to our record</item>
<item>if not,
then</item>
<item>check if there is also a wikidata item</item>
<item>check if it is in
geonames.org</item>
<item>if yes add the uri in the @ref</item>
<item>if not (but check
thoroughly, because it would be an exception) create a new place
record</item>
</list></p>
                <p>Generally, when possible it is always preferable to have an external link
                to an authority file for places out of scope which we are not going
                to describe or give details about. If there is already a record, no
                need to delete it or update it. Simply add the Wikidata Entity.</p>
                <p>Adding references to places not in our db:
<list>
<item>for ancient place
prefere pleiades, with namespace pleiades</item>
<item>for places related to
coptic literary tradition use PAThs</item>
</list>
                </p>
            </div>

        </body>
    </text>
</TEI>
